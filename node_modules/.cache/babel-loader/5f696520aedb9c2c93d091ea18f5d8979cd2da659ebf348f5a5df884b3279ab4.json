{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data: function data() {\n    return {\n      // sku字段分隔符\n      separator: ';',\n      attribute: [{\n        name: '颜色',\n        item: ['黑', '金', '白']\n      }, {\n        name: '内存',\n        item: ['16G', '32G']\n      }, {\n        name: '运营商',\n        item: ['电信', '移动', '联通']\n      }],\n      sku: [{\n        sku: '黑;16G;电信',\n        price: 100,\n        stock: 10\n      }, {\n        sku: '黑;16G;移动',\n        price: 101,\n        stock: 11\n      }, {\n        sku: '黑;16G;联通',\n        price: 102,\n        stock: 0\n      }, {\n        sku: '黑;32G;电信',\n        price: 103,\n        stock: 13\n      }, {\n        sku: '黑;32G;移动',\n        price: 104,\n        stock: 14\n      }, {\n        sku: '黑;32G;联通',\n        price: 105,\n        stock: 0\n      }, {\n        sku: '金;16G;电信',\n        price: 106,\n        stock: 16\n      }, {\n        sku: '金;16G;移动',\n        price: 107,\n        stock: 17\n      }, {\n        sku: '金;16G;联通',\n        price: 108,\n        stock: 18\n      }, {\n        sku: '金;32G;电信',\n        price: 109,\n        stock: 0\n      }, {\n        sku: '金;32G;移动',\n        price: 110,\n        stock: 20\n      }, {\n        sku: '金;32G;联通',\n        price: 111,\n        stock: 21\n      }, {\n        sku: '白;16G;电信',\n        price: 112,\n        stock: 0\n      }, {\n        sku: '白;16G;移动',\n        price: 113,\n        stock: 23\n      }, {\n        sku: '白;16G;联通',\n        price: 114,\n        stock: 24\n      }, {\n        sku: '白;32G;电信',\n        price: 115,\n        stock: 0\n      }, {\n        sku: '白;32G;移动',\n        price: 116,\n        stock: 26\n      }, {\n        sku: '白;32G;联通',\n        price: 117,\n        stock: 27\n      }],\n      process_attribute: [],\n      process_sku: [],\n      // 当前选中 sku 的库存及价格区间\n      stock: '',\n      minprice: '',\n      maxprice: ''\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n    // console.log(this.getFlagArrs(4,3))\n  },\n\n  methods: {\n    init: function init() {\n      var _this = this;\n      // 对 attribute 数据进行加工，并存入 process_attribute 中\n      this.attribute.map(function (attr) {\n        var temp = {\n          name: attr.name\n        };\n        temp.item = attr.item.map(function (item) {\n          return {\n            name: item,\n            actived: false,\n            disabled: false\n          };\n        });\n        _this.process_attribute.push(temp);\n      });\n      console.log(this.process_attribute);\n      // 对 sku 数据进行加工，并存入 process_sku 中\n      this.sku.map(function (v) {\n        var combArr = _this.arrayCombine(v.sku.split(_this.separator));\n        for (var j = 0; j < combArr.length; j++) {\n          var key = combArr[j].join(_this.separator);\n          if (_this.process_sku[key]) {\n            // 库存累加，价格添加进数组\n            _this.process_sku[key].stock += v.stock;\n            _this.process_sku[key].prices.push(v.price);\n          } else {\n            _this.process_sku[key] = {\n              stock: v.stock,\n              prices: [v.price]\n            };\n          }\n        }\n      });\n      // 更新数据视图\n      this.process_sku = Object.assign({}, this.process_sku);\n      console.log(this.process_sku, 'this.process_sku', Object.keys(this.process_sku).length);\n      this.skuCheck();\n    },\n    arrayCombine: function arrayCombine(targetArr) {\n      var resultArr = [];\n      for (var n = 0; n <= targetArr.length; n++) {\n        var flagArrs = this.getFlagArrs(targetArr.length, n);\n        while (flagArrs.length) {\n          var flagArr = flagArrs.shift();\n          var combArr = Array(targetArr.length);\n          for (var i = 0; i < targetArr.length; i++) {\n            if (flagArr[i]) {\n              combArr[i] = targetArr[i];\n            }\n          }\n          resultArr.push(combArr);\n        }\n      }\n      console.log(resultArr, 'resultArr');\n      return resultArr;\n    },\n    getFlagArrs: function getFlagArrs(m, n) {\n      var flagArrs = [],\n        flagArr = [],\n        isEnd = false;\n      for (var i = 0; i < m; i++) {\n        flagArr[i] = i < n ? 1 : 0;\n      }\n      flagArrs.push(flagArr.concat());\n      // 当n不等于0并且m大于n的时候进入\n      if (n && m > n) {\n        while (!isEnd) {\n          var leftCnt = 0;\n          for (var i = 0; i < m - 1; i++) {\n            if (flagArr[i] == 1 && flagArr[i + 1] == 0) {\n              for (var j = 0; j < i; j++) {\n                flagArr[j] = j < leftCnt ? 1 : 0;\n              }\n              flagArr[i] = 0;\n              flagArr[i + 1] = 1;\n              var aTmp = flagArr.concat();\n              flagArrs.push(aTmp);\n              if (aTmp.slice(-n).join('').indexOf('0') == -1) {\n                isEnd = true;\n              }\n              break;\n            }\n            flagArr[i] == 1 && leftCnt++;\n          }\n        }\n      }\n      return flagArrs;\n    },\n    skuClick: function skuClick(key1, key2) {\n      if (!this.process_attribute[key1].item[key2].disabled) {\n        this.process_attribute[key1].item.map(function (item, index) {\n          item.actived = index == key2 ? !item.actived : false;\n        });\n        this.skuCheck();\n        this.getStockPrice();\n      }\n    },\n    skuCheck: function skuCheck() {\n      var sku = [];\n      this.process_attribute.map(function (attr) {\n        var name = '';\n        attr.item.map(function (item) {\n          if (item.actived) {\n            name = item.name;\n          }\n        });\n        sku.push(name);\n      });\n      this.stock = this.process_sku[sku.join(this.separator)].stock;\n      this.minprice = Math.min.apply(Math, this.process_sku[sku.join(this.separator)].prices);\n      this.maxprice = Math.max.apply(Math, this.process_sku[sku.join(this.separator)].prices);\n    },\n    getStockPrice: function getStockPrice() {\n      var _this2 = this;\n      this.process_attribute.map(function (attr) {\n        attr.item.map(function (item) {\n          item.disabled = false;\n        });\n      });\n      var count = 0;\n      var i = 0;\n      this.process_attribute.map(function (attr, index) {\n        var flag = false;\n        attr.item.map(function (item) {\n          if (item.actived) {\n            flag = true;\n          }\n        });\n        if (!flag) {\n          count += 1;\n          i = index;\n        }\n      });\n      // 当只有一组规格没选时\n      if (count == 1) {\n        this.process_attribute[i].item.map(function (item) {\n          var sku = [];\n          var text = item.name;\n          _this2.process_attribute.map(function (attr, index) {\n            if (index != i) {\n              attr.item.map(function (item2) {\n                if (item2.actived) {\n                  sku.push(item2.name);\n                }\n              });\n            } else {\n              sku.push(text);\n            }\n          });\n          if (_this2.process_sku[sku.join(_this2.separator)].stock == 0) {\n            item.disabled = true;\n          }\n        });\n      }\n      // 当所有规格都有选时\n      if (count == 0) {\n        this.process_attribute.map(function (attr, index) {\n          var i = index;\n          _this2.process_attribute[index].item.map(function (item) {\n            if (!item.actived) {\n              var sku = [];\n              var text = item.name;\n              _this2.process_attribute.map(function (list, index) {\n                if (index != i) {\n                  list.item.map(function (item2) {\n                    if (item2.actived) {\n                      sku.push(item2.name);\n                    }\n                  });\n                } else {\n                  sku.push(text);\n                }\n              });\n              if (_this2.process_sku[sku.join(_this2.separator)].stock == 0) {\n                item.disabled = true;\n              }\n            }\n          });\n        });\n        debugger;\n      }\n    },\n    submit: function submit() {\n      var sku = [];\n      var isSelectSKU = this.process_attribute.every(function (attr) {\n        var filter = attr.item.filter(function (v) {\n          return v.actived;\n        });\n        if (filter.length != 0) {\n          sku.push(filter[0].name);\n        }\n        return filter.length != 0;\n      });\n      if (isSelectSKU) {\n        this.$message.success(\"\\u5F53\\u524DSKU\\u4E3A\\uFF1A\".concat(sku.join(this.separator)));\n      } else {\n        this.$message.warning('请选择完整商品属性');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","separator","attribute","item","sku","price","stock","process_attribute","process_sku","minprice","maxprice","mounted","init","methods","_this","map","attr","temp","actived","disabled","push","console","log","v","combArr","arrayCombine","split","j","length","key","join","prices","Object","assign","keys","skuCheck","targetArr","resultArr","n","flagArrs","getFlagArrs","flagArr","shift","Array","i","m","isEnd","concat","leftCnt","aTmp","slice","indexOf","skuClick","key1","key2","index","getStockPrice","Math","min","apply","max","_this2","count","flag","text","item2","list","submit","isSelectSKU","every","filter","$message","success","warning"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n<div>\n\t\t<el-row type=\"flex\" class=\"sku-info\">\n\t\t<el-col v-for=\"(attr, index) in process_attribute\" :key=\"index\">\n\t\t\t<h3>{{ attr.name }}</h3>\n\t\t\t<el-button-group>\n\t\t\t\t<el-button v-for=\"(item, index2) in attr.item\" :key=\"index2\" :type=\"item.actived ? 'primary' : ''\" :disabled=\"item.disabled\" @click=\"skuClick(index, index2)\">{{ item.name }}</el-button>\n\t\t\t</el-button-group>\n\t\t</el-col>\n\t</el-row>\n\t<div style=\"margin-top: 20px;\">\n\t\t库存：\n\t\t<span>{{ stock }}</span>\n\t</div>\n\t<div style=\"margin-bottom: 20px;\">\n\t\t价格：\n\t\t<span v-if=\"minprice == maxprice\">{{ minprice }}</span>\n\t\t<span v-else>{{ minprice }} - {{ maxprice }}</span>\n\t</div>\n\t<el-button type=\"primary\" @click=\"submit\">购买</el-button>\n\t<el-row type=\"flex\" :gutter=\"20\">\n\t\t<el-col>\n\t\t\t<el-divider content-position=\"left\">加工处理过的 attribute 数据</el-divider>\n\t\t\t<pre><code>{{ process_attribute }}</code></pre>\n\t\t</el-col>\n\t\t<el-col>\n\t\t\t<el-divider content-position=\"left\">加工处理过的 sku 数据</el-divider>\n\t\t\t<pre><code>{{ process_sku }}</code></pre>\n\t\t</el-col>\n\t</el-row>\n</div>\n\t\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n\tdata() {\n\t\treturn {\n\t\t\t// sku字段分隔符\n\t\t\tseparator: ';',\n\t\t\tattribute: [\n\t\t\t\t{\n\t\t\t\t\tname: '颜色',\n\t\t\t\t\titem: ['黑', '金', '白']\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '内存',\n\t\t\t\t\titem: ['16G', '32G']\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '运营商',\n\t\t\t\t\titem: ['电信', '移动', '联通']\n\t\t\t\t}\n\t\t\t],\n\t\t\tsku: [\n\t\t\t\t{ sku: '黑;16G;电信', price: 100, stock: 10 },\n\t\t\t\t{ sku: '黑;16G;移动', price: 101, stock: 11 },\n\t\t\t\t{ sku: '黑;16G;联通', price: 102, stock: 0 },\n\t\t\t\t{ sku: '黑;32G;电信', price: 103, stock: 13},\n\t\t\t\t{ sku: '黑;32G;移动', price: 104, stock: 14},\n\t\t\t\t{ sku: '黑;32G;联通', price: 105, stock: 0},\n\t\t\t\t{ sku: '金;16G;电信', price: 106, stock: 16},\n\t\t\t\t{ sku: '金;16G;移动', price: 107, stock: 17},\n\t\t\t\t{ sku: '金;16G;联通', price: 108, stock: 18},\n\t\t\t\t{ sku: '金;32G;电信', price: 109, stock: 0},\n\t\t\t\t{ sku: '金;32G;移动', price: 110, stock: 20},\n\t\t\t\t{ sku: '金;32G;联通', price: 111, stock: 21},\n\t\t\t\t{ sku: '白;16G;电信', price: 112, stock: 0},\n\t\t\t\t{ sku: '白;16G;移动', price: 113, stock: 23},\n\t\t\t\t{ sku: '白;16G;联通', price: 114, stock: 24},\n\t\t\t\t{ sku: '白;32G;电信', price: 115, stock: 0},\n\t\t\t\t{ sku: '白;32G;移动', price: 116, stock: 26},\n\t\t\t\t{ sku: '白;32G;联通', price: 117, stock: 27}\n\t\t\t],\n\t\t\tprocess_attribute: [],\n\t\t\tprocess_sku: [],\n\t\t\t// 当前选中 sku 的库存及价格区间\n\t\t\tstock: '',\n\t\t\tminprice: '',\n\t\t\tmaxprice: ''\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.init()\n\t\t// console.log(this.getFlagArrs(4,3))\n\t},\n\tmethods: {\n\t\tinit() {\n\t\t\t// 对 attribute 数据进行加工，并存入 process_attribute 中\n\t\t\tthis.attribute.map(attr => {\n\t\t\t\tlet temp = {\n\t\t\t\t\tname: attr.name\n\t\t\t\t}\n\t\t\t\ttemp.item = attr.item.map(item => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: item,\n\t\t\t\t\t\tactived: false,\n\t\t\t\t\t\tdisabled: false\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.process_attribute.push(temp)\n\t\t\t})\n\t\t\tconsole.log(this.process_attribute)\n\t\t\t// 对 sku 数据进行加工，并存入 process_sku 中\n\t\t\tthis.sku.map(v => {\n\t\t\t\tvar combArr = this.arrayCombine(v.sku.split(this.separator))\n\t\t\t\tfor (var j = 0; j < combArr.length; j++) {\n\t\t\t\t\tvar key = combArr[j].join(this.separator)\n\t\t\t\t\tif (this.process_sku[key]) {\n\t\t\t\t\t\t// 库存累加，价格添加进数组\n\t\t\t\t\t\tthis.process_sku[key].stock += v.stock\n\t\t\t\t\t\tthis.process_sku[key].prices.push(v.price)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.process_sku[key] = {\n\t\t\t\t\t\t\tstock: v.stock,\n\t\t\t\t\t\t\tprices: [v.price]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t// 更新数据视图\n\t\t\tthis.process_sku = Object.assign({}, this.process_sku)\n\t\t\tconsole.log(this.process_sku,'this.process_sku',Object.keys(this.process_sku).length)\n\t\t\tthis.skuCheck()\n\t\t},\n\n\n\t\tarrayCombine(targetArr) {\n\t\t\tvar resultArr = []\n\t\t\tfor (var n = 0; n <= targetArr.length; n++) {\n\t\t\t\tvar flagArrs = this.getFlagArrs(targetArr.length, n)\n\t\t\t\twhile (flagArrs.length) {\n\t\t\t\t\tvar flagArr = flagArrs.shift()\n\t\t\t\t\tvar combArr = Array(targetArr.length)\n\t\t\t\t\tfor (var i = 0; i < targetArr.length; i++) {\n\t\t\t\t\t\tif (flagArr[i]) {\n\t\t\t\t\t\t\tcombArr[i] = targetArr[i]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresultArr.push(combArr)\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(resultArr,'resultArr')\n\t\t\treturn resultArr\n\t\t},\n\n\n\t\tgetFlagArrs(m, n) {\n\t\t\tvar flagArrs = [],\n\t\t\t\tflagArr = [],\n\t\t\t\tisEnd = false\n\t\t\tfor (var i = 0; i < m; i++) {\n\t\t\t\tflagArr[i] = i < n ? 1 : 0\n\t\t\t}\n\t\t\tflagArrs.push(flagArr.concat())\n\t\t\t// 当n不等于0并且m大于n的时候进入\n\t\t\tif (n && m > n) {\n\t\t\t\twhile (!isEnd) {\n\t\t\t\t\tvar leftCnt = 0\n\t\t\t\t\tfor (var i = 0; i < m - 1; i++) {\n\t\t\t\t\t\tif (flagArr[i] == 1 && flagArr[i + 1] == 0) {\n\t\t\t\t\t\t\tfor (var j = 0; j < i; j++) {\n\t\t\t\t\t\t\t\tflagArr[j] = j < leftCnt ? 1 : 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tflagArr[i] = 0\n\t\t\t\t\t\t\tflagArr[i + 1] = 1\n\t\t\t\t\t\t\tvar aTmp = flagArr.concat()\n\t\t\t\t\t\t\tflagArrs.push(aTmp)\n\t\t\t\t\t\t\tif (aTmp.slice(-n).join('').indexOf('0') == -1) {\n\t\t\t\t\t\t\t\tisEnd = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflagArr[i] == 1 && leftCnt++\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn flagArrs\n\t\t},\n\n\n\t\tskuClick(key1, key2) {\n\t\t\tif (!this.process_attribute[key1].item[key2].disabled) {\n\t\t\t\tthis.process_attribute[key1].item.map((item, index) => {\n\t\t\t\t\titem.actived = index == key2 ? !item.actived : false\n\t\t\t\t})\n\t\t\t\tthis.skuCheck()\n\t\t\t\tthis.getStockPrice()\n\t\t\t}\n\t\t},\n\n\n\t\tskuCheck() {\n\t\t\tlet sku = []\n\t\t\tthis.process_attribute.map(attr => {\n\t\t\t\tlet name = ''\n\t\t\t\tattr.item.map(item => {\n\t\t\t\t\tif (item.actived) {\n\t\t\t\t\t\tname = item.name\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tsku.push(name)\n\t\t\t})\n\t\t\tthis.stock = this.process_sku[sku.join(this.separator)].stock\n\t\t\tthis.minprice = Math.min.apply(Math, this.process_sku[sku.join(this.separator)].prices)\n\t\t\tthis.maxprice = Math.max.apply(Math, this.process_sku[sku.join(this.separator)].prices)\n\t\t},\n\n\n\t\tgetStockPrice() {\n\t\t\tthis.process_attribute.map(attr => {\n\t\t\t\tattr.item.map(item => {\n\t\t\t\t\titem.disabled = false\n\t\t\t\t})\n\t\t\t})\n\t\t\tlet count = 0\n\t\t\tlet i = 0\n\t\t\tthis.process_attribute.map((attr, index) => {\n\t\t\t\tlet flag = false\n\t\t\t\tattr.item.map(item => {\n\t\t\t\t\tif (item.actived) {\n\t\t\t\t\t\tflag = true\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (!flag) {\n\t\t\t\t\tcount += 1\n\t\t\t\t\ti = index\n\t\t\t\t}\n\t\t\t})\n\t\t\t// 当只有一组规格没选时\n\t\t\tif (count == 1) {\n\t\t\t\tthis.process_attribute[i].item.map(item => {\n\t\t\t\t\tlet sku = []\n\t\t\t\t\tlet text = item.name\n\t\t\t\t\tthis.process_attribute.map((attr, index) => {\n\t\t\t\t\t\tif (index != i) {\n\t\t\t\t\t\t\tattr.item.map(item2 => {\n\t\t\t\t\t\t\t\tif (item2.actived) {\n\t\t\t\t\t\t\t\t\tsku.push(item2.name)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsku.push(text)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (this.process_sku[sku.join(this.separator)].stock == 0) {\n\t\t\t\t\t\titem.disabled = true\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\t// 当所有规格都有选时\n\t\t\tif (count == 0) {\n\t\t\t\tthis.process_attribute.map((attr, index) => {\n\t\t\t\t\tlet i = index\n\t\t\t\t\tthis.process_attribute[index].item.map(item => {\n\t\t\t\t\t\tif (!item.actived) {\n\t\t\t\t\t\t\tlet sku = []\n\t\t\t\t\t\t\tlet text = item.name\n\t\t\t\t\t\t\tthis.process_attribute.map((list, index) => {\n\t\t\t\t\t\t\t\tif (index != i) {\n\t\t\t\t\t\t\t\t\tlist.item.map(item2 => {\n\t\t\t\t\t\t\t\t\t\tif (item2.actived) {\n\t\t\t\t\t\t\t\t\t\t\tsku.push(item2.name)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsku.push(text)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tif (this.process_sku[sku.join(this.separator)].stock == 0) {\n\t\t\t\t\t\t\t\titem.disabled = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\tdebugger\n\t\t\t}\n\t\t},\n\n\n\t\tsubmit() {\n\t\t\tlet sku = []\n\t\t\tlet isSelectSKU = this.process_attribute.every(attr => {\n\t\t\t\tlet filter = attr.item.filter(v => v.actived)\n\t\t\t\tif (filter.length != 0) {\n\t\t\t\t\tsku.push(filter[0].name)\n\t\t\t\t}\n\t\t\t\treturn filter.length != 0\n\t\t\t})\n\t\t\tif (isSelectSKU) {\n\t\t\t\tthis.$message.success(`当前SKU为：${sku.join(this.separator)}`)\n\t\t\t} else {\n\t\t\t\tthis.$message.warning('请选择完整商品属性')\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}